################################################################################
#
# Perf data commands
#
################################################################################

define command {
	command_name process-service-perfdata
	command_line /usr/local/nagios/libexec/insert.pl
}

################################################################################
#
# Notification commands
#
################################################################################

# Email notification for host alerts
define command {
	command_name notify-host-by-email
	command_line /usr/bin/printf "%b" "***** Cluemon *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **" $CONTACTEMAIL$
}

# Email notification for service alerts
define command {
	command_name notify-service-by-email
	command_line /usr/bin/printf "%b" "***** Cluemon *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$\n" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
}

# IRC notification for host alerts
define command {
	command_name notify-host-by-irc
	command_line /bin/echo "host||~||$NOTIFICATIONTYPE$||~||$HOSTNAME$||~||$HOSTSTATE$||~||$HOSTOUTPUT$" | socat - UDP:localhost:3843
}


# IRC notification for service alerts
define command {
	command_name notify-service-by-irc
	command_line /bin/echo "service||~||$NOTIFICATIONTYPE$||~||$HOSTNAME$||~||$SERVICEDESC$||~||$SERVICESTATE$||~||$SERVICEOUTPUT$" | socat - UDP:localhost:3843
}

# Twitter notification for host alerts
define command {
	command_name notify-host-by-twitter
	command_line $USER1$/notify_twitter "$HOSTNAME$: $NOTIFICATIONTYPE$ - [$HOSTSTATE$] $HOSTOUTPUT$"
}

# Twitter notification for service alerts
define command {
	command_name notify-service-by-twitter
	command_line $USER1$/notify_twitter "$HOSTNAME$: $NOTIFICATIONTYPE$ - $SERVICEDESC$ [$SERVICESTATE$] - $SERVICEOUTPUT$"
}

# Do nothing - useful for users who don't want spam
define command {
	command_name do-nothing-at-all
	command_line /bin/echo "Hello world" > /dev/null
}

################################################################################
#
# Host check commands
#
################################################################################

# Ping check a host
# warning:
# ARG1 - round trip average travel time (ms)
# ARG2 - percentage of packet loss
#
# critical:
# ARG3 - round trip average travel time (ms)
# ARG4 - percentage of packet loss
#
# ARG5 - number of packets to send
define command {
	command_name check-host-alive
	command_line $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$,$ARG2$% -c $ARG3$,$ARG4$% -p $ARG5$
}

################################################################################
#
# Service check commands
#
################################################################################

# Ping check
# warning:
# ARG1 - round trip average travel time (ms)
# ARG2 - percentage of packet loss
#
# critical:
# ARG3 - round trip average travel time (ms)
# ARG4 - percentage of packet loss
#
# ARG5 - number of packets to send
define command {
	command_name check_ping
	command_line $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$,$ARG2$% -c $ARG3$,$ARG4$% -p $ARG5$
}


# Check a SSH server is responding
# - ARG1 is the timeout value
# - ARG2 is the ssh port
# - ARG3 is anything else specified
define command {
	command_name check_ssh
	command_line $USER1$/check_ssh -t $ARG1$ -p $ARG2$ $ARG3$ $HOSTADDRESS$
}

# Check a RDP server is responding as expected
# - ARG1 is the warning timeout value
# - ARG2 is the critical timeout value
# - ARG3 is anything else specified
define command {
	command_name check_x224
	command_line $USER1$/check_x224 -w $ARG1$ -c $ARG2$ -H $HOSTADDRESS$ $ARG3$
}
